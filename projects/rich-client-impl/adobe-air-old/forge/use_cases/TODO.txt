#-*- coding : utf-8 -*-
/// job ///
пока Нет :
  теория  **
  средства разработки(make, cvs, svn, git)
  нижний слой(Си) *

Цель : 
  1. получить библиотеки((lib|a)&(so|dll)) c функциями
    с оздающие поток ! нужен самый посл. станд. DRM30!
MPEG-4 v2 High Quality Audio Profile  ER AAC LC
MPEG-4 v2 High Quality Audio Profile  ER-CELP 
  версия 1 есть, но она похоже неслабо отличается от v2
MPEG-4 v2 Low Delay Audio Profile or Natural Audio Profile ER-HVXC
  вот с защитой от ошибок не ясно, но вцелом похоже не
    сильно отличается
  2. Use simples


!!! есть обновления
алгоритм:  // при условии, что код тот что нужно
система сборка - разобраться в ней
# || тестовые *.au
если Да:
  собрать под linux (важно понять как переменные уст.
    а дельше может все пройдет удачно)
  если Да:
    оттестить в нем
    если Да:
      // как можно раньше. на работе linux нет, но можно cygw
      перенести на cygwin и оттестить - Это уже в винде, 
        но еще пока линуксовский вариант
      если Да: 
        пытаться перенести на винду полностью(хотябы 
          расширить makefile)
        если Да:
          расщепить кодеки  
          если Да:
            добавляю помехозащиту
            если Да: 
              все тестим на передатчиках
              если Работает:
                Конец
              иначе
            иначе
          иначе
        иначе
      иначе
    иначе
  иначе        
иначе
|| установка cygwin stop;
пока Не Скомпилирую
  если Да:  // все что нужно установлено
    пытаться собрать
    если Да:
      Тестирование 
      если Да:
        Выход
  иначе  // скорее всего не будет хватать компиляторов
    установить весь // интересен объем
// на cygwin готово

|| разделение кодеков
почитать стандарты, балого нашел их

|| tools learning
make - система сборки
compilars and linkers - то чем будет происходит сборка

/// dip ///
|| 
пока Все Разд. Не Прочитаю:
  внимательно изучаю нужные разделы книжки
  делаю простейшие задания
  складывать в .git  // нужно создать
написать часть LPC and CELP and Qua. and LPC conv.
  ограничить область исследования

||
для Всех Необходимых:
  ищу в матлабе необходимые блоки(сделать обзок)
если Все:
  собираю базовый кодек
  если Да:
    ставим первый опыт 
    если Да: 
      обрабатываем результаты и показываем
      Далее освежаем инфу и делаем второй опыт
иначе
  каких нет отбростить или написать 
  для Всех Не Найденных :
    если Делать :
      внимательно изучить матчасть и написать блок   
    иначе
      просто вычеркиваем
! осовременить знания

|| искать тестовые последовательности

|| git repos with speech coding
сделать репозиторий на Pyside, где много репозиториев
найти того чела, кто собирался делать про голос кодки тулс
читать про сборку питон-пакетов
ограничить круг вспомогательных пакетов
сделать первую заливку



/************************************/
/// think
2005 - влияние методов квантования на качество
  восстанавливаемой речи
еще какие есть исследования?
! на принятие стандарта уходит в лучшем случае 4,5 - 5 лет

/// bin
! drm последний стандарт ! 
просмотреть документацию - для разделения кодеков
повторить о маке и попробовать какие-нить старые ском-
  пилировать (exe and libs)
почитать makefail for codec

// nib (sedo; target)
-1. отличие mp4v1 от mp4v2 только в ER-
The Parametric Audio Coding tools combine very low bit rate coding of general audio signals with the possibility of modifying the playback speed or pitch during decoding without the need for an effects processing unit.  In combination with the speech and audio coding tools of Version 1, improved overall(общий) coding efficiency is expected for applications of object based coding allowing selection and/or switching between different coding techniques.

Celp
The silence(тишина) compression tool reduces the average bit rate <thanks to>{благодаря} a lower bit rate compression for silence. In the encoder, a voice activity detector is used to distinguish between regions with normal speech activity and those with silence or background noise.  During normal speech activity, the CELP coding as in Version 1 is used.  Otherwise a Silence Insertion Descriptor (SID) is transmitted at a lower bit rate.  This SID enables a Comfort Noise Generator (CNG) in the decoder.  The amplitude and spectral shape of this comfort noise is specified by energy and LPC parameters similar as in a normal CELP frame.  These parameters are an optional part of the SID and thus can be updated as required
The Error Resilient (ER) HVXC object is supported by the Parametric speech coding (ER HVXC) tools, which provides fixed bit-rate modes(2.0-4.0kbps) and variable bit-rate mode(<2.0kbps, <4.0kbps) both in a scalable and non-scalable scheme. In the Version 1 HVXC, variable bit rate mode of 2.0 kbit/s maximum is already supported and the variable bit rate mode of 4.0 kbit/s maximum is additionally(дополнительно) supported in Version 2 ER HVXC.
MPEG-4 Version 1 was approve(одобрена)d by MPEG in December 1998; version 2 was frozen(заморожена) in December 1999


0. аудио файлы - пока с простого
Required libraries:
libtsp.a		AFsp audio file library
Required modules: 
common.o		common module
austream.o		audio i/o streams (.au format)

1. разобраться с тем как компилируется все это дело
  make-files(написание и использование) собрать инфу и 
    обдумать, просмотреть файлы и обдумать еще раз
  -include makefile.cfg - наводит на мысль, что не только
    make (
  нужно создать кучу переменных окружения

The Reference Software is written in ANSI C and is C++ compilable.  It can be compiled and linked on UNIX/Linux platforms using GNU's gcc/g++ and GNU's make.  For other compilers and platforms, the makefile might require adaption to your local environment.
2. собрать в линуксе
  в любом случае 
    - это mp4v1 и вопрос в том, есть ли отличия, помимо ER?
    - для xnix, а нужно больше для винды
3. вробе бы как поддерживает cygwin32
  опции компиляторы

4. создание библиотек

! cygwin пока не качать

Об аудио
5   Audio File I/O
All audio file i/o of the Reference Software is handled via the audio.h interface.  The current implementation of audio.c uses the austream.c module included in the Reference Software to provideт support for 16-bit ".au" files.  To provide support for other common audio file formats (like ".wav" and ".aiff"), the audio.c module can make use of the AFsp library.

Все же проблема в сборке, вот с ней и нужно сперва разобраться

// sedo
The official MPEG Home Page:  
  http://www.cselt.it/mpeg
MPEG Audio Web Page:  http://www.tnt.uni-hannover.de/project/mpeg/audio/
MPEG Audio ftp server:
  ftp://ftp.tnt.uni-hannover.de/pub/MPEG/audio/
  {нашел что-то, но похоже только mp4v1}
I/O
WWW site:		  http://www.TSP.EE.McGill.CA/software.html
ftp site:		  ftp://ftp.TSP.EE.McGill.CA/pub/AFsp
mirror site:		  ftp://ftp.tnt.uni-hannover.de/pub/audio/AFsp

О селпе - неравномерная битовая скорость, найти какие варианты есть(битовая скорость не всегда = скорости передачи)

Сегодня вообще склеивание и нижний слой
поискать пример битового потока


Но это кажется не вторая версия mpeg4(если так
  то нужно узнать как добавлять избыточность
  в стандарте DRM вроде-бы все описано)
Natural-Audio and Speech Coding
The official MPEG Home Page:
  http://www.cselt.it/mpeg
MPEG Audio Web Page:    http://www.tnt.uni-hannover.de/project/mpeg/audio/
MPEG Audio ftp server:  
  ftp://ftp.tnt.uni-hannover.de/pub/MPEG/audio/
WWW site:		  http://www.TSP.EE.McGill.CA/software.html
ftp site:
  ftp://ftp.TSP.EE.McGill.CA/pub/AFsp
mirror site:  ftp://ftp.tnt.uni-hannover.de/pub/audio/AFsp
Закачать книжку про MPEG на флэшку
!! есть разные рекомендации IUT, Hxxx MPEG? про mpeg найти побольше

найти документацию на MPEG стандарт
интересно speex на основе MPEG or other

что искать 
1. обзор кодеков
2. вкурить хорошо структуру CELP->HVXC и понять, какие 
  параметры можно менять, помимо тех, которые заданы в
  примере
  почему эти кодеки? почему таки оценки?
  ( - размер кодовой книги
    - уровни квантования
    - какая-то задержка

    - МОИ (с уклоном 
    в сторону методов) какие-то принципы формирование кодовой книги? алгоритмы вычисления коэффициентов? адаптивное(квантование, )
    - не мои лучше не повторять
  еще есть кодек hvxc - его схему тоже нужно понять
  - объективные оценки что они?)
  - степень квантизации LPC
если матлаб, то программистская доля падает(а смысл то тогда
  куда с этими знаниями)
всетаки примеры важно - чтобы не изобретать велоситпедов
придется понимать!!
нужно найти стандарт на celp


 MyAccessToDB{}
  
  /// ///
  intelAccender {}

  /// ///
  BinManager {
    управления bin.txt use regex
  }

  /// ///
  WordMixer {
    уже более менее разобрался с выделением текстк
  }

///////////////////// /////////////////////
#-*- coding : utf-8 -*-
Programming {  // программист
разобраться в стандартах
повторить создание разных либ и склеивание
gui прилепить плеер, и подумать вообще(несколько файлов 
  лучше держать, чем один)
наверное лучше из плеера передалать, а свое пока
  приостановить(подумать над ТЗ)
можно пытаться передавать поток плеерам
  напрямую, а не через файлы без своего декодирования
!! оттестить общую склейку!!! - вот первая точка
      ~или можно параллельно что-то делать
    загр. файл ->  перевыборка -> запись
    пропустить через какой-либо кодек
      подготовленный файл
  ! очень нужно научится склеивать py-C-libd(a) - верт. срез
    в любой системе
    потом нужно будет понять как передавть пареметры туда и обратно

    цель-т.к. не ко всем кодекам сделана оболочка 
      на питоне, то нужно научится расширять питон за счет си и буста
      сперва из коммандной строки, затем через utils

  странно с dll-ками 

    исследовательская программа будет результирующе
      сами кодеки собираться и отлаживаться будут
        из eclipse or VSEx2008
   run : 
    1. разобраться в склейки через Mingw - толком ничего не вышло
      нужно разобраться в сборках буста - зап. примеры
        на олеге и моем
? include для питона или буст.питона
! в среду может быть включена подсистема генерации 
  программного кода

    dll2python
научится пользоваться динамическими и статическими либами(win., lin.)
  научится делать к ним питоновские интерфейсч
  склеивать с легко разрабатываемыми(декларатинвными ui)
  
  ? условная компиляция
  ! из имеющихся mpeg4v2 кодеков нужно сделать библиотеки
    для плагинов похоже нужны динамические
   читать про алгоритмы для конкурса
  как сэмитировать сигнал в питоне
  ! нашел плеер, который можно прикрутить к моей 
    программе
  понять сигналы-слоты-связывание-доступ
  прокачивать сиспльзование библиотек
  инфа про makefiles 
! нужны примеры для Pyside +qml
    собрать все что нужно для запуска на голый линух
      deb, libsip..
  ? как приклеить Pyside
  ! про сигналы и слоты нужно как можно подробнее
  еще важно про видимость, особенное между файлами
qml top-level and no
fundChild ищет только по верхнему уровню или нет
есть некий rootObject
! декларативныйВид - тоже виджет!
? как делать окна без рамки
!!! Учится нужно дома, тут без интернета делать нечего!!!
попытаться присоединить библ для перевыборка - browse
лучше пока конвертацию отложить до выяснения 
  обстоятельств
почитать про js - browse - не нашел про switch
делать блоки интерфейса - job
  (блоки ввода-вывода)
!the library + location (see numpy.distutils for details) - find
qml need - поле ввода с прокруткой
  листбокс
как сигнал из питона, а слот из qml
  наверное при загрузке нужно соединять
? xml-базазнаний и вообще база знаний полезна
! в питоне похоже есть библиотека для 
  перевыборки - это упрощает!
всетаки понять где в линух что храниться
плеер, так же как и анализаторы файлов должны 
    быть кроссплатформенные, а остальное 
    может и не быть
сделать тз на свою программу исследования
скомпилировать костину программу и начать в ней разбираться
  ! надо собрать программу(скомпилировать)
    и посмотреть что она может, а потом уж делать выводы
    важны скорости передачи
  попробовать собранную на моем компе, если нет качать
  пятую студию
склейка в винде  
читать про ipp что оттуда можно взять  разобраться с идеологие библиотек вообще 
сперва для lin, потом для винды
склеить существующ. библ. с кодом питона (c lin    в итоге все получилось)

перетащить с линукса иформацию о создании либ
}

/// ///
dsp {  // dsp - специалист
обзор книжек - хорошо бы найти программу распознавания текста
  (для джвю можно скринить, твердые можно сканить или фотать)

! длину окна лучше выбирать в миллисекундах(и вообещ нужно подумать о спектральном анализе)
подумат о задержках и скоростях
! тестировани - несколько операций кодирования-декодирования
кстати можно еще речь русскую и нет
че у нас про адаптацию было - нейронные сети и добырнволк
всетаки информацию нужно извлекать итеративно
 Вообще полезно собрать и surrond-технлогии
  SBR, PS, ER, Эхо-подавление, DSI(dig. speech interp.), VAD,
  распознавание речи
    Спрва на русском разобраться что да как
      собрать русскую инфй посвежее (потребуется допинфа по дсп)
   // завести обширную базу знаний в голове
   Просмотреть англиские книги посвежее
   Статью(предполагаются уже немалые знания)
  найти информацию о кодеках на русском, иначе очень 
      трудно понимать на англиском
? смена частот дискретизации и ?битовых сокростей
    ? можно ли поменять чистоту дискретизации
      при записи с микрофона
    научится бысторо делать фильтры оконными методами
      из питона(ну или в Си)
    синтезировать фильтры оконными методами
    ? разница межуд bitrates and simple freq.
    ? тип квантизации в wav-файлах
 test&Notes {
    сделать запись отрезка радиопередачи
      нужны хорошие голоса (дикторов например) вробе бы можно 
      записать на плеер сразу с радио
    Субъект. оценки : проигрываем через Phonon and через
      LynxONE, если с phonon не выйдет, то просто проиг-
      рывателем
    Объективные : 
      спетрограммы и данные на их основе. Интегральные 
      ценки
    ITU-T - тестивые вектоа
    безскоростной 
    скоростной с применением 
      даденой карты
      ethernet
      rs
    program has NOT been tested with the official ITU-T test data
    сперва без SBR по формату file->file.acc->file  
     (слушать    можно из моего плеера)
    имитация канала передачи(надо как-то 
      смоделировать   конвееризацию)
    может udp и на несколькийх компах, несколько потоков
      добавление режимов
  }
}


/// /// ///
Наташа : some_vegetables@mail.ru
  www.itu.com 
  http://www.iis.fhg.de/amm/techinf/aac/index.html
  http://www.rjamorim.com/rrw/aacenc.html
  http://www.cselt.it/mpeg
  http://www.tnt.uni-hannover.de/project/mpeg/audio/
  ftp://ftp.tnt.uni-hannover.de/pub/MPEG/audio/
    pyside ассистента бы хорошо завести
! позарез как нужна быстаря флэшка

/// ///
dev&tools {
  нужно больше узнать об eclipse
  научится создавать и использовать dll и so 
  использование готовый библиотек и !возможностей 
    драйверов
  походу читать про регуляные выражения
  make - read
  autotools - read...
    нужно перевести проекты на make
  устновить убунту постарее и ipxe_u2
    вопрос с поддерживаемой архитектурой остался
  осваивать make и git
  нужно хорошо понять как собирать вместе 
    библиотеки и питоновский интерфейс к ним
  нужно разобраться как стклеивать в 
    винде и линуже
  создание dll и их использование(gcc)
    недостаточно информации
  def - файл и ?библиотеки импорта - 

}

/// ///
global {
  раз испльзую не свои библ, то нужно основатлеьно 
  понять как подключать их(динамич, статич, пути    
  ключи компилятоов и возможно, что-то еще) 
  все библиотеки на Си(не плюсплюс) надо в нем    
  прокачиватся (zzz) питон-питоном, но оталадка Си частей...  
  искать библиотеки кодеков, которые будут проверяться
    (ipp-? ubuntuStudio? matlab? srcC? из мобильников?
    ? где бы взять поновее
  подготовка к госам
  области применения речевых кодеков (VoiP, Mobile, ...)
  купить лампочку послабее
  /// ///
  choose {
    либо громоздкая студия, хоть даже экспрес    
    либо eclipse - очень медленная   
    либо вывод коммандной строки(типа трассирования) и gdb
  }
}

/// ///
qml {
  run {
    делать заготовки на qml
  }
  
  /// ///
  слоистость мешает иногда
  edit - полоса прокрутки
  цепочка(позиция-grid-repeat-(свойства и delegates))
    (границу передачи через тип не преодолел)
  доступ к переменным
  цвета - списки
  массивы в qml (может можно посмотреть в js)
  стандартные элементы в qml(
    - comboboxes, 
    - вкладки
    всплывающие окна
    and others)
  обзор qml
    повторение элементов
    ввод текста в полях
  генерация элементов в цыкле и приписание разных     функции
  о функции не очень понятно пока еще
    и вообще как их различать id - ?
  как получить данные из поля ввода
  !? как различать экземпляры классов
  модификаторы доступа в qml
  позиционирование, доступ к подобластям, прочее
}

/// ///
python {
  run {
    py utils - read and test
  }
  
  python creating threads
  python и русские буквы - encodings
  структуры данных в питоне
  python - межмодульная видимость
  if and other in the python
  
  libs {  
    matpl раздельное масштабирование осей
    подробнее про py.wave
    подпись осей
    сделать шаг кратный степени 2
  }
  
  /// ///
  glue {
    инфа про Boost и python
    передача параметров (питон менее типизирова чем Си)
    qml(+py) сигналы и слоты - read and test
    нужно посмотреть пример
    ! python-/I/-C  - I - интерфейс причем он может быть не 
    толкьо для питона, но и например для C++/CLI
  }
}

/// ///
projects {
  classes
    - работа с СОМ опртом
    - обработчик строк(uchar <-> char <-> AnsiString ?<-> юникод)
- геренаторы mif
- обдумать анализаторы и сборщики команд
- просто генераторы
- ?быстрые развертыватели и сохранители
- смешивалка слов

! Сделать что-то вроде LabVIEW
swith-технология
см главную по питону
1.
  
  /// ///
  SpeechCodecNoteTools{
    Run {
      окучить информацию, а то и в голове начинает расплы
        ваться
      можно в принципе уже рисовать метрики для
      ! нужно сделать вертикальный cрез (qml-py-[boost]-cc++)
      проверить склееность
      прикинуть общий вид приложения
      ! дома попытаться запустит перевыборщик
    }

    /// ///    
    сперва как проигрывать файлы(просто файлы)
    ? DirectSound devices.
    скомпилировать программу данную костей
      и в ней разобраться
    фильтрация(буду делать сторонней либой)
    есть примеры использования кода в ipp, разобраться в них
    разгребать коды
    пытаться разобраться в использовании кодеков
    срезы сонограмм (но наверное не на matplotlib)
    проигрывают ли плееры wav-файлы с заявленой 
      скоростью не равное 44.1
    входные-выходные данные для форматов
    нужно понижать скорость 48->24->16->12->8  
    передескретизация 44.1 - 48.0
    как из стандартного звукового файла достать 
      отсчеты(mp3, wav.. и еще что либо) с wav все уже решено
    выбор одного канала
    полная разборка файла
    построение сонограммы
      настройка параметров ее ввода
    объединить повторяющиеся операции
    запись куска файла
    топовую прогу с полями вывода пареметров вав-файла
    (нужно ли делать перевыборку, если да, то нужно 
    делать передискретизацию(может плата умеет)) 
    - перевыборка - libsndfile
    - проигрывание - portAudio

    /// ///
    fromKos {
      потребуется новый генератор сигнала для костиной 
        программы - из файла наверное зациклить
      поставить таки студию
      скомпилировать Костину прогу
      поработать с собранной прогой, оценить, что может
      обдумать как использовать прогу кости(пользы 
        от нее много все же не будет но можно 
        попытаться пользоваться положенными в проект либами)
      (где часть, которая связывает с платой)
      (Working with Third Party Applications)
      в костиной проге есть генератор(синуса похоже) 
        можно попытаться в эту цепочку вклинитьсят
      ? взаимодействие с драйверами (в костиной должно быть)
        (Third party applications communicate with the LynxONE 
        through its installed driver. The driver 
        presents the LynxONE’s 
        audio and MIDI capabilities to applications asstandard 
        multimedia or DirectSound devices.) - ? API
    }
    
    /// ///
    LynsONE {
      переходник плата-наушники
      можно ли управлять скоростью передачи(bitrate)
      на карте() вроде да, но пока точно не понятно
      Analog 
        Sample Rates 8 kHz to 50 kHz, including all standard rates 
        with highresolution adjustment
       Bit Depth 8, 16, 24 or 32 bit file types
    }
  }

  /// ///
  choose {
    разобраться, чтобы выбирать кодеки разных 
      производителей(разные режимы и схемы)
    разобраться, чтобы запускать, то что есть
    разобраться, чтобы  делать
    надо выбрать что-то среднее
    Библиотеки могут быть разными, поэтому кроссплатф.
    нужна поэтому выбор питора целесообразен
    (хотя под карту дров на Linux нет похоже)
    Написание программ своих под упр. питоном 
      тоже целесообр. т.к. придется считать метрики
    Найденная программа анализатор неподробно показывает
      но умеет делать срезы
  }

  /// ///
  fails {
    не сделано/труднсоти
      - не присоединена библиотека
      - с доступа
    не вышло сделать возможным захождение на сайт мс
    не удалось скомпилировать прогу Кости
  }
}
