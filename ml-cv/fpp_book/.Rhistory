library("fpp")
fit <- stl(elecequip, s.window = 5)
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,2], col='red', ylab='trend')
fit
fit
str(fit)
str(elecequip)
lines(fit$time.series[,3], col='green', ylab='trend')
lines(fit$time.series[,2], col='red', ylab='trend')
lines(fit$time.series[,3], col='green', ylab='trend')
fit <- stl(elecequip, s.window = 5)
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,2], col='red', ylab='trend')
lines(fit$time.series[,3], col='green', ylab='trend')
str(elecequip)
str(fit)
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,3], col='green', ylab='trend')
lines(fit$time.series[,1], col='green', ylab='trend')
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,1], col='green', ylab='trend')
str(elecequip)
lines(fit$time.series[,1], col='green', ylab='trend')
plots(fit$time.series[,1], col='green', ylab='trend')
plot(fit$time.series[,1], col='green', ylab='trend')
plot(fit$time.series[,3], col='green', ylab='trend')
library(plotly)
install.packages("plotly")
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,2], col='red', ylab='trend')
plot(fit$time.series[,3], col='green', ylab='trend')
lines(fit$time.series[,1], col='green', ylab='trend')
library(plotly)
p1 <- plot_ly(economics, x = ~date, y = ~unemploy) %>%
add_lines(name = ~"unemploy")
p2 <- plot_ly(economics, x = ~date, y = ~uempmed) %>%
add_lines(name = ~"uempmed")
p <- subplot(p1, p2)
chart_link <- plotly_POST(p, filename = "subplot/basic")
chart_link
library("fpp")
fit <- stl(elecequip, s.window = 5)
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,2], col='red', ylab='trend')
plot(fit$time.series[,3], col='green', ylab='trend')
lines(fit$time.series[,1], col='green', ylab='trend')
par(mfrow=c(2,2))
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,2], col='red', ylab='trend')
plot(fit$time.series[,3], col='green', ylab='trend')
lines(fit$time.series[,1], col='green', ylab='trend')
library(plotly)
par(mfrow=c(2,1))
fit <- stl(elecequip, s.window = 5)
par(mfrow=c(2,1))
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(fit$time.series[,2], col='red', ylab='trend')
plot(fit$time.series[,3], col='green', ylab='trend')
lines(fit$time.series[,1], col='green', ylab='trend')
library(plotly)
lines(fit$time.series[,1], col='green', ylab='trend')
library(plotly)
p1 <- plot_ly(economics, x = ~date, y = ~unemploy) %>%
add_lines(name = ~"unemploy")
p2 <- plot_ly(economics, x = ~date, y = ~uempmed) %>%
add_lines(name = ~"uempmed")
p <- subplot(p1, p2)
chart_link <- plotly_POST(p, filename = "subplot/basic")
chart_link
plot(fit)
monthplot(fit$time.series[,'seasonal'], main="", ylab="")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
lines(seasadj(fit))
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
library("fpp")
fit <- stl(elecequip, s.window = 5)
plot(elecequip, col="gray", main="eem", ylab="noi", xlab="")
lines(seasadj(fit))
ma(elecsales, order = 5)
par(mfrow=c(1,1))
plot(elecsales, main="", ylab='GWh', xlab="Year")
lines(ma(elecsales, 5), col='red')
fit <- decompose(x, type='multiplicative')
fit <- stl(elecequip, t.window = 15,
s.window = "periodic", robust = TRUE)
eeadj <-seasadj(fit)
plot(naive(eeadj))
fcast <- forecast(fit, method = 'naive')
plot(fcast)
library(fpp)
oildata <- window(oil, start=1996, end=2007)
plot(oildata)
fit1 <- ses(oildata, alpha=0.2, initial="simple", h=3)
fit2 <- ses(oildata, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oildata, h=3)
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fitted(fit1), col="blue", type="o")
lines(fitted(fit2), col="red", type="o")
lines(fitted(fit3), col="green", type="o")
lines(fit1$mean, col="blue", type="o")
lines(fit2$mean, col="red", type="o")
lines(fit3$mean, col="green", type="o")
legend("topleft",lty=1, col=c(1,"blue","red","green"),
c("data", expression(alpha == 0.2), expression(alpha == 0.6),
expression(alpha == 0.89)),pch=1)
air <- window(ausair, start=1990, end = 2004)
fit1 <- holt(air, alpha = 0.8, beta = 0.2, initial = 'simple',
h=5)
fit2 <- holt(air, alpha = 0.8, beta = 0.2, initial = 'simple',
exponential = TRUE, h=5)
fit1$model$states
fitted(fit1)
fit1$mean
fit3 <- holt(air, alpha = 0.8, beta = 0.2, initial = 'simple',
damped = TRUE, h=5)
plot(fit2, type = "o", fcol = "white", plot.conf = FALSE)
fit3 <- holt(air, alpha = 0.8, beta = 0.2, initial = 'simple',
damped = TRUE, h=5)
plot(fit2, type = "o", fcol = "white")#, plot.conf = FALSE)
fit3 <- holt(air, alpha = 0.8, beta = 0.2, initial = 'optimal',
damped = TRUE, h=5)
plot(fit2, type = "o", fcol = "white")#, plot.conf = FALSE)
fit3 <- holt(air, alpha = 0.8, beta = 0.2, initial = 'optimal',
damped = TRUE, h=5)
plot(fit2, type = "o", fcol = "white")#, plot.conf = FALSE)
plot(fit2, type = "o", fcol = "white")#, plot.conf = FALSE)
line(fitted(fit1), col="blue")
line(fitted(fit2), col="blue")
line(fitted(fit3), col="blue")
plot(fit2, type = "o", fcol = "white")#, plot.conf = FALSE)
lines(fitted(fit1), col="blue")
lines(fitted(fit2), col="blue")
lines(fitted(fit3), col="blue")
lines(fitted(fit1), col="blue")
lines(fitted(fit2), col="red")
lines(fitted(fit3), col="green")
lines(fit1$mean, col='blue', type='o')
lines(fit2$mean, col='red', type='o')
lines(fit3$mean, col='green', type='o')
library(fpp)
plot(diff(log(a10)))
plot(diff(log(a10, 12)))
plot(diff(log(a10, 12)))
plot(diff(log(a10), 12))
adf.test(a10, alternative = 'stationary')
adf.test(diff(log(a10), 12), alternative = 'stationary')
fit <- auto.arima(usconsumption[,1], seasonal = FALSE)
plot(forecast(fit, h=10), include = 80)
par(mfrow=c(1, 2))
Acf(usconsumption[,1])
Pacf(usconsumption[,1])
plot(jitter(Carbon) ~ jitter(City), data=fuel)
plot(jitter(Carbon) ~ jitter(City))#, data=fuel)
ls(fpp)
ls("fpp")
ls("package:fpp")
search()
library(fpp)
search()
ls("package:fpp")
plot(jitter(Carbon) ~ jitter(City)), data=fuel)
plot(jitter(Carbon) ~ jitter(City), data=fuel)
x <- 1:5/10
y <- 1:5
z <- x %o% y
z <- z + .2*z*runif(25) - .1*z
library(rgl)
persp3d(x, y, z, col="skyblue")
install.packages("rgl")
library(rgl)
persp3d(x, y, z, col="skyblue")
fit <- lm(Carbon ~ City, data = fuel)
abline(fit)
summary(fit)
res <- residuals(fit)
plot(jitter(res) ~ jitter(City), data=fuel)
abline(0,0)
res <- residuals(fit)
plot(jitter(res) ~ jitter(City), data=fuel)
abline(0,0)
fitted(fit)[1]
fcast <- forecast(fit, newdata = data.frame(City=30))
plot(fcast)
