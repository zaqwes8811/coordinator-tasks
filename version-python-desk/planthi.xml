<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<body>
	
	Fail : промах по платформе
	Fail : планирование 
	Do : тестирование через jUnit в air приложении
	Issue : 
	Ref :
	Learn :
	Think : как быть с локализацией и интернационализацией?
	Info :авторазмеры могут и не подходить
	Info : The 3 rules. The Blender user interface is based on 3 main principles:
		Non Overlapping: The UI permits you to view all relevant options and tools at a glance without pushing or dragging windows around(1).
		Non Blocking: Tools and interface options do not block the user from any other parts of Blender. Blender doesn't pop up requesters that require the user to fill in data before things execute.
		Non Modal: User input should remain as consistent and predictable as possible without changing commonly used methods (mouse, keyboard) on the fly.
	Think : консольный ввод 
	Algors : заполнение кэша. База данных-файл - поэтому может быть медленна. Кэши - в озу map
	Algors : запись в базу данных(пока все свое)
	Algors : Чтение, Редактирование, Удаление или... отмечать что сделано
	Think : видел js-библ. для работы с графами (визуализ) может Mindmap сделать
	Ref : отрефайкторить и сделать наследование от интерфейсов(второе под вопросом)
	Do : научится пользоваться инструментами, кот. предл. AirSDK
	Learn : нужно узнать как запросы отправляются и как вообще(GET, POST)
	Think : install update (plugins?) uninstall
	
	<AlgoritmsAndDataSrtsHighLevel>
		thk : с базой можно делать вот что
			: имопртировать из разных месть при разном формате данных
			: экспортировать из нее во что-нибдуь 
			: сливать базы и разделять
		thk : хорошо бы сделать события связанными и это визуализ.
		thk : срадства рефакторинга - защита от дублирования
			поиск слов как минимум
		DataStruct : Новая запись :  простейшие записи
			дата имя? текст важность
		Напоминания
	  - загрузка по умолчанию и напоминания
		(три месяца? прошлый-тек-следующий(нужен     ли)) 
	  - проверка всех дел в пределах (разовая)
	  сохранения нужно делать не только при выходе
  но и походу
  пропущенные дела
сделано = уделено?
	хранение состояния - 
закрытие приложения
  сохранение состояния
	</AlgoritmsAndDataSrtsHighLevel>
	<ErrorsFailsEtc>
		Think!! : ошибки падение и потеря данных
		как обрабатывать ошибки? хорошо тестить то, что не должно давать ошибок(нет нужно 
			что-то делать даже для составления issues)
			корректность vs устойчивость
			защитное прогр. 
	</ErrorsFailsEtc>
	<database>
		Think : где хранить базу
		Think! : очень хорошо науч. пользоваться базой данных. Важна надежность
		Learn : операции с базой данных покрыть тестами - по ним потом пользоваться(прототип)
		Think : слияние базданных из разных мест? несколько табл. в базе 
		Think : сохранять можно на локальном компьютере и в облаке?
		нужно сортировать базу!
		нужно подумать об удалени и перемещении(
		..ч00 хранить инфу о дубляже)
		может еще базу сделать - для скоростного
			поиска дел - просто дата и преоритет
	</database>
	<platforms>
		flash, flex, air-flex, java android sdk, vk, google sernices
	<platforms>
	
	<deprecated>
		! попробовать раздельную компиляцию(для графики особенно)
			хотя как быть с точкой входа? или панельки в библиотеку, а остальное
			как и было
		qt... смысл
		даже на олеженом загружаетя нескоро, даже самое простое
		штука все равное не очень быстрая(из-за
  виртуальной машины), хотя все зависит
  от мощности компьютера
  UI :
  Flash</->Flex
  кажется вконтакте можно подгружать swf-files
  mxml - язык описание интерфей
	</deprecated>
	<tmp>

Point : сделать слой хранения и работы с сообщениями
  ускорть его как можно сильнее
// бизнес логика
|| слой хранения и обработки сообщений
  база данных+кэш+напоминания(таймеры и...)

// бизнес-логика
изучения возможностей для UI
разработка логики и вида ui(use-cases) 

low || парсеры и коммандная строка "общения как в контакте"

! обдумать обработку ошибок, может лучше исключениями сделать,
  а не кодами ошибок

Сделать вертикальный срез
Отрефакторить всю округу(vk, pure air)

Интерфейс должен быть не перегружен информацией!! (текцщая позиция)

Quesitons:
  как отлаживать вне контакта
    
    как вызывать методы из VK API
! попробовать раздельную компиляцию(для графики особенно)
  хотя как быть с точкой входа? или панельки в библиотеку, а остальное
  как и было

тестирование ui - просто клацать не эффективно
искл. исп. как и утверждения - события, кот. никогда не должны случаться
искл. - часть интерфейса

адрес почты и телефон

методы принятия решений

контроль версий(слияние разделение баз данных)
	защита от дублирования информации(если на разные платформы будем делать)
api

настройка стилей

соврачивание в трэй?

Понять наложение div'oв
 наложение слоев 
  сделать выпадание списка дел - пока просто планки(доб. удалить)
    с сохнанением в базе и индикацией о наличии
  //динамику выпадание потом, так же как и прокрутку
  
сделать из файла модуль(пакет) к глобалным переменным сделать 
  методы доступа. Данные хорошо бы кластеризовать. Получается 
    методы доступа к глобальному пространству имен. Еще хорошо сдеть
    слой абстракции


	</tmp>
</body>


